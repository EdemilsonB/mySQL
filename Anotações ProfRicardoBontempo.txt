-- criando relacionamento entre tabelas com sql nativo usando os comando Inner Join, Left Join e Right Join

create table itau.cargos(
cod_cargo char(2) not null primary key,
nome_cargo varchar(20) not null,
valor_cargo decimal(8,2) not null
);

create table itau.funcionarios(
matricula int not null auto_increment,
nome_funcionario varchar(40) not null,
cod_cargo char(2) not null,
primary key (matricula),
foreign key (cod_cargo) references cargos(cod_cargo));

alter table itau.cargos change column nome_cargo nome_cargo varchar(50) not null; 

insert into itau.cargos
(cod_cargo,nome_cargo,valor_cargo)
values
("C1","DBA em banco de dados",8950),
("C2","Gerente opercional de TI",6850),
("C3","Suporte de Help desk",4850),
("C4","Auxiliar do Gerente de CPD",2580);

insert into itau.funcionarios
(nome_funcionario,cod_cargo)
values
("Alexandre","C1"),
("Bolanho","C1"),
("Daniela","C2"),
("Tatiana Chacon","C2"),
("Ricardo Alexandre","C4");

-- Inner Join mostra os registros quando existir em ambas as tabelas
select f.nome_funcionario,c.nome_cargo,c.valor_cargo
from itau.cargos as c
inner join itau.funcionarios as f
on(f.cod_cargo=c.cod_cargo);

-- Left Join mostra os registros em ambas tabelas e se não existir registros na tabela da esqueda ele mostra também o relacionamento
select f.nome_funcionario,c.nome_cargo,c.valor_cargo
from itau.cargos as c
left join itau.funcionarios as f
on(f.cod_cargo=c.cod_cargo);

-- Left Join com group by mais count
Permite mostrar todos os registros aglutinando o número de funcionários por cargo
select c.nome_cargo,count(f.cod_cargo) as Total_de_Funcionario
from itau.cargos as c
left join itau.funcionarios as f
on(c.cod_cargo=f.cod_cargo)
group by c.cod_cargo;


/* comando utilizado para criação do database
 create database itau;*/
 
-- Comando utilizado para por o database do banco em uso
 use itau;
 
-- Comando utilizado para se criar uma tabela dentro do database
 create table itau.clientes(
 cod_cliente integer not null primary key,
 nome_cliente varchar(50) not null,
 idade_cliente integer(3) not null,
 email_cliente varchar(80) not null
 );

-- comando utilizado para mostrar a estrutura da tabela que foi criada no banco de dados
describe itau.clientes;

-- comando utilizado para inserir registros na tabela
insert into itau.clientes
(cod_cliente,nome_cliente,idade_cliente,email_cliente)
values
(1,"Nayza Fioritta",20,"nayza.f@unibanco.br"),
(2,"Gustavo Gallo",25,"gustavo.g@unibanco.br"),
(3,"Daniela",18,"daniela@unibanco.br"),
(4,"Vinícius Morita",27,"vinicius.m@unibanco.br");

-- comando utilizado para  ver, consultar  os registros inseridos na tabela
select * from itau.clientes;

-- comando utilizado para consultar os registros em ordenados por um campo desejado
select * from itau.clientes order by nome_cliente;

-- comando utilizado para consuotar registros utilizando um filtro como clausula. 
select * from itau.clientes where idade_cliente=18;

-- comando utilizado para consuotar registros utilizando um filtro como clausula.
select * from itau.clientes where cod_cliente=50;

-- comando utilizado para consultar uma faixa de registros.
select * from itau.clientes where idade_cliente>=18 and idade_cliente<=22 order by idade_cliente;


-- comando select count, permite fazer uma consulta da contagem de registros 
select count(*) as Total_de_Registros from itau.clientes where idade_cliente>=18 and idade_cliente<=22;

-- comando select com o conteúdo exato da string 
select * from itau.clientes where nome_cliente="Daniela";

-- comando select utilizado para consultar registros do tipo caracter utilizando like e % para consulta. 
select * from itau.clientes where nome_cliente like "Gustavo%";
select * from itau.clientes where nome_cliente like "%Gallo";
select * from itau.clientes where nome_cliente like "%A.%";

select * from itau.clientes where nome_cliente like "B%";

-- Retornando o menor valor em um select min
select min(idade_cliente) from itau.clientes

-- Retornando o maior valor em um select max
select max(idade_cliente) from itau.clientes

-- Utilizando um select dentro de outro select
select * from itau.clientes where idade_cliente = (select min(idade_cliente) from itau.clientes);

-- permite fazer uma consulta com filtro igual a condição ou.
select nome_cliente,idade_cliente from itau.clientes where idade_cliente in(20,30,40);

-- permite fazer uma consulta totalizando  e gerando uma quebra por agrupamento
SELECT 
    COUNT(idade_cliente) AS total_de_pessoas, idade_cliente
FROM
    itau.clientes
WHERE
    idade_cliente IN (20 , 30, 40)
GROUP BY idade_cliente;

-- permite criar novos campos na tabela
alter table itau.clientes add endereco varchar(50) not null;

-- permite excluir campos em uma tabela, mesmo que ele contenha registro.
alter table itau.clientes drop endereco;

-- permite renomear um campo de uma tabela, sem afetar os registros
alter table itau.clientes rename column endereco to endereco_cliente;

-- permite alterar o tipo do campo de uma tabela, verificando sempre o conteúdo do campo que está sendo modificado.
alter table itau.clientes change column endereco_cliente endereco_cliente varchar(60) not null;

-- permite inserir somente o registro no campo especificado 
update itau.clientes set endereco="Rua Fábia" where cod_cliente=1;

-- permite fazer um backup completo da tabela a quente ou seja da tabela de produção
create table itau.bck_clientes select * from itau.clientes;

-- permite excluir fisicamente a tabela, campos e registros
drop table itau.bck_clientes;

-- como subir o backup de uma tabela para produção
1º) Passo, crie uma linha de insert, 2º) Passo, defina exatamente com os mesmo campos o select da tabela de backup para que o banco de dados suba os seus registros.
insert into itau.clientes
(cod_cliente,nome_cliente,idade_cliente,email_cliente,endereco_cliente,bairro_cliente)
select cod_cliente,nome_cliente,idade_cliente,email_cliente,endereco_cliente,bairro_cliente from itau.bck_clientes;

-- criação da nova tabela de clientes para geração de funsão ou migração de dados

create table itau.clientes(
codigo_cliente integer not null auto_increment,
nome_cliente varchar(60) not null,
cpf_cliente char(11) not null,
endereco_cliente varchar(50) not null,
bairro_cliente varchar(30) not null,
cep_cliente char(8) not null,
estado_residencia_cliente char(2) not null,
agencia_cliente char(4) not null,
conta_corrente char(8) not null,
digito_verificador integer(1),
email_cliente varchar(60) not null,
ddd_cliente char(3) not null,
telefone_cliente char(9) not null,
data_modificacao_registro datetime,
primary key (codigo_cliente, cpf_cliente)
);

-- normailização do insert x select de tabelas diferentes para fazer a migração dos dados.

insert into itau.clientes
(nome_cliente,cpf_cliente,endereco_cliente,bairro_cliente,cep_cliente,estado_residencia_cliente,agencia_cliente,conta_corrente,digito_verificador_cliente,email_cliente,ddd_cliente,telefone_cliente,data_modificacao_registro)
select nome_cliente,"atualizar",endereco_cliente,bairro_cliente,"00000000","xx","0","0",0,email_cliente,"000","0",now() from unibanco.clientes;

-- criando uma tabela para gerar cálculos

create table itau.vendas(
cod_venda int not null auto_increment primary key,
nome_produto varchar(20) not null,
quantidade_produto int(4) not null,
valor_unitario_produto decimal(8,2) not null,
nome_vendedor varchar(40) not null
);

-- inserindo registro para a efetuação dos cálculos

insert into itau.vendas
(nome_produto,quantidade_produto,valor_unitario_produto,nome_vendedor)
values
("mouse",50,35.50,"Marcos"),
("impressora",30,480.99,"Cristina"),
("teclado",10,45.50,"Pedro"),
("monitor",20,490.00,"Cristina"),
("scanner",100,280.00,"Edison");


SELECT 
    nome_produto,
    quantidade_produto,
    valor_unitario_produto,
    (quantidade_produto * valor_unitario_produto) AS Sub_Total,
    nome_vendedor
FROM
    itau.vendas;

-- criando relacionamento entre tabelas 

insert into itau.produtos
(nome_produto,valor_produto,cod_marca)
values
-- ("Geladeira",1850.99,1);
("Fogão",1250.50,1),
("TV",1750.00,2),
("Microondas",480,1),
("Celular",1350,3),
("Microsystem",1200,3),
("Liquidificador",89.99,4),
("Batedeira",279.99,4);

insert into itau.marcas
(nome_marca)
values
("Brastemp"),
("Sony"),
("LG"),
("Walita");

-- select de relacionamento entre as tabelas 
 select p.nome_produto,p.valor_produto,m.nome_marca
 from itau.produtos as p,
 itau.marcas as m
 where (p.cod_marca=m.cod_marca);